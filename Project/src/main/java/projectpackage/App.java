package projectpackage;

import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;

public class App extends javax.swing.JFrame {

    /**
     * Creates new form App
     */
    Functions f = new Functions();
    BinarySearchTree<String> words;
    JPopupMenu popupMenu = new JPopupMenu();

    public App() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);

        words = f.getWords();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        SPane = new javax.swing.JScrollPane();
        TextAreaInput = new javax.swing.JTextArea();
        autoCompBtn = new javax.swing.JButton();
        KSpinner = new javax.swing.JSpinner();
        KLabel = new javax.swing.JLabel();
        suggestionBtn = new javax.swing.JButton();
        SPane2 = new javax.swing.JScrollPane();
        TextAreaSonuc = new javax.swing.JTextArea();

        jMenuItem.setText("jMenuItem1");
        jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TextAreaInput.setColumns(20);
        TextAreaInput.setRows(5);
        TextAreaInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TextAreaInputMouseReleased(evt);
            }
        });
        SPane.setViewportView(TextAreaInput);

        autoCompBtn.setText("Auto Complete");
        autoCompBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoCompBtnActionPerformed(evt);
            }
        });

        KSpinner.setValue(1);

        KLabel.setText("K:");

        suggestionBtn.setText("Suggestion");
        suggestionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suggestionBtnActionPerformed(evt);
            }
        });

        TextAreaSonuc.setEditable(false);
        TextAreaSonuc.setColumns(20);
        TextAreaSonuc.setRows(5);
        SPane2.setViewportView(TextAreaSonuc);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(SPane))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(SPane2))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(32, 32, 32)
                                                .addComponent(autoCompBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                                                .addComponent(KLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(KSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(63, 63, 63)
                                                .addComponent(suggestionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(15, 15, 15)))
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(SPane, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(autoCompBtn)
                                        .addComponent(KSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(KLabel)
                                        .addComponent(suggestionBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 2, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextAreaInputMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextAreaInputMouseReleased
        // TODO add your handling code here:
        try {
            popupMenu.removeAll();
            BinarySearchTree<String> popupWords = f.closestWords(words, TextAreaInput.getSelectedText().toLowerCase()); // BST for closest words
            StringBuilder pWords = popupWords.allElementsToStringBuilder();

            for (int i = 0; i < 4; i++) { // add 4 words to popup menu
                String word = String.valueOf(pWords.toString().split(" ")[i]);
                jMenuItem = new JMenuItem(word);
                jMenuItem.addActionListener(this::jMenuItemActionPerformed);
                popupMenu.add(jMenuItem);

            }
        } catch (Exception e) {

        }
        if (evt.isPopupTrigger()) {
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY()); // show popup menu
        }

    }//GEN-LAST:event_TextAreaInputMouseReleased

    private void jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItemActionPerformed
        // TODO add your handling code here:
        String suggestedWord = evt.getActionCommand(); // get selected word from popup menu
        TextAreaInput.replaceSelection(suggestedWord); // replace selected text with suggested word
        jMenuItem.addActionListener(this::jMenuItemActionPerformed);
    }// GEN-LAST:event_jMenuItemActionPerformed


    private void suggestionBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_showbtnActionPerformed
        // TODO add your handling code here:
        TextAreaSonuc.setText("");
        String selected; // get selected text
        int k = (int) KSpinner.getValue(); // get k value
        BinarySearchTree<String> closestWords; // BST for closest words
        BinarySearchTree<String> kClosestWords; // BST for k closest words
        try {
            selected = TextAreaInput.getSelectedText().toLowerCase();
            closestWords = f.closestWords(words, selected); // get closest words
            kClosestWords = f.closestWordsByK(closestWords, k); // get k closest words
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(rootPane, "Lütfen bir kelime seçiniz"); // if there is no selected word
            return;
        }
        StringBuilder sb = kClosestWords.allElementsToStringBuilder(); // get all elements of BST as StringBuilder

        TextAreaSonuc.setText(sb.toString()); // set text area with k closest words
    }

    private void autoCompBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_AutobtnActionPerformed
        // TODO add your handling code here:
        String selected; // get selected text
        String closestWord;
        try {
            selected = TextAreaInput.getSelectedText().toLowerCase();
            closestWord = f.getClosestWord(words, selected); // get closest word
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(rootPane, "Lütfen bir kelime seçiniz"); // if there is no selected word
            return;
        }
        TextAreaInput.replaceSelection(closestWord); // replace selected text with closest word
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel KLabel;
    private javax.swing.JSpinner KSpinner;
    private javax.swing.JScrollPane SPane;
    private javax.swing.JScrollPane SPane2;
    private javax.swing.JTextArea TextAreaInput;
    private javax.swing.JTextArea TextAreaSonuc;
    private javax.swing.JButton autoCompBtn;
    private javax.swing.JMenuItem jMenuItem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton suggestionBtn;
    // End of variables declaration//GEN-END:variables
}
